// <auto-generated />
using System;
using DAL_DataAccessLayers.DBContex_FC;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace _1_DAL.Migrations
{
    [DbContext(typeof(DbContext_FC))]
    [Migration("20211109175037_Create-DB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DAL_DataAccessLayers.CUSTOMERS", b =>
                {
                    b.Property<int>("id_Customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("account_Number")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customer_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sex")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Customer");

                    b.ToTable("CUSTOMERS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.EMPLOYEES", b =>
                {
                    b.Property<int>("id_Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("bridDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("employee_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sex")
                        .HasColumnType("bit");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Employee");

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.IMAGES_PRODUCTS", b =>
                {
                    b.Property<int>("id_Image")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("imge_Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Image");

                    b.ToTable("IMAGES_PRODUCTS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.OPTIONS", b =>
                {
                    b.Property<int>("id_Option")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("option_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Option");

                    b.ToTable("OPTIONS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.OPTIONS_VALUES", b =>
                {
                    b.Property<int>("id_Option")
                        .HasColumnType("int");

                    b.Property<int>("id_Values")
                        .HasColumnType("int");

                    b.Property<string>("option_Values")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Option", "id_Values");

                    b.ToTable("OPTIONS_VALUES");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ORDERS", b =>
                {
                    b.Property<int>("id_Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("amount_Pay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("discount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Customer")
                        .HasColumnType("int");

                    b.Property<int>("id_Employee")
                        .HasColumnType("int");

                    b.Property<DateTime>("order_Time")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("paying_Customer")
                        .HasColumnType("money");

                    b.Property<string>("payments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("refunds")
                        .HasColumnType("money");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Order");

                    b.HasIndex("id_Customer");

                    b.HasIndex("id_Employee");

                    b.ToTable("ORDERS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ORDER_DETAILS", b =>
                {
                    b.Property<int>("id_Order")
                        .HasColumnType("int");

                    b.Property<int>("id_Product")
                        .HasColumnType("int");

                    b.Property<int>("id_Variant")
                        .HasColumnType("int");

                    b.Property<int>("id_Option")
                        .HasColumnType("int");

                    b.Property<string>("Discount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Values")
                        .HasColumnType("int");

                    b.Property<decimal>("price_Each")
                        .HasColumnType("money");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.Property<decimal>("unit_Price")
                        .HasColumnType("money");

                    b.HasKey("id_Order", "id_Product", "id_Variant", "id_Option");

                    b.HasIndex("id_Product", "id_Variant", "id_Option");

                    b.ToTable("ORDERS_DETAILS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS", b =>
                {
                    b.Property<int>("id_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("products_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Product");

                    b.ToTable("PRODUCTS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS_OPTIONS", b =>
                {
                    b.Property<int>("id_Product")
                        .HasColumnType("int");

                    b.Property<int>("id_Option")
                        .HasColumnType("int");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Product", "id_Option");

                    b.HasIndex("id_Option");

                    b.ToTable("PRODUCTS_OPTIONS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS_VARIANTS", b =>
                {
                    b.Property<int>("id_Product")
                        .HasColumnType("int");

                    b.Property<int>("id_Variant")
                        .HasColumnType("int");

                    b.Property<string>("sku_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Product", "id_Variant");

                    b.ToTable("PRODUCTS_VARIANTS");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ROLES", b =>
                {
                    b.Property<int>("id_roles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("roles_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_roles");

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ROLES_EMPLOYEE", b =>
                {
                    b.Property<bool>("StatusDelete")
                        .HasColumnType("bit");

                    b.Property<int>("id_Employee")
                        .HasColumnType("int");

                    b.Property<int>("id_Roles")
                        .HasColumnType("int");

                    b.HasIndex("id_Employee");

                    b.HasIndex("id_Roles");

                    b.ToTable("ROLES_EMPLOYEE");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.VARIANTS_VALUES", b =>
                {
                    b.Property<int>("id_Product")
                        .HasColumnType("int");

                    b.Property<int>("id_Variant")
                        .HasColumnType("int");

                    b.Property<int>("id_Option")
                        .HasColumnType("int");

                    b.Property<int>("id_Image")
                        .HasColumnType("int");

                    b.Property<int>("id_Values")
                        .HasColumnType("int");

                    b.Property<decimal>("import_Price")
                        .HasColumnType("money");

                    b.Property<decimal>("price")
                        .HasColumnType("money");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<bool>("status_Delete")
                        .HasColumnType("bit");

                    b.HasKey("id_Product", "id_Variant", "id_Option");

                    b.HasIndex("id_Image");

                    b.HasIndex("id_Option", "id_Values");

                    b.HasIndex("id_Product", "id_Option");

                    b.ToTable("VARIANTS_VALUES");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.OPTIONS_VALUES", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.OPTIONS", "Options")
                        .WithMany("OptionsValueses")
                        .HasForeignKey("id_Option")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Options");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ORDERS", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.CUSTOMERS", "Customers")
                        .WithMany("Orders")
                        .HasForeignKey("id_Customer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.EMPLOYEES", "Employees")
                        .WithMany("Orders")
                        .HasForeignKey("id_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ORDER_DETAILS", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.ORDERS", "Orders")
                        .WithMany()
                        .HasForeignKey("id_Order")
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.VARIANTS_VALUES", "VariantsValues")
                        .WithMany("variant_Values")
                        .HasForeignKey("id_Product", "id_Variant", "id_Option")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("VariantsValues");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS_OPTIONS", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.OPTIONS", "Optionses")
                        .WithMany("OptionsesProducts")
                        .HasForeignKey("id_Option")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.PRODUCTS", "Productses")
                        .WithMany("ProductsOptions")
                        .HasForeignKey("id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Optionses");

                    b.Navigation("Productses");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS_VARIANTS", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.PRODUCTS", "Products_variant")
                        .WithMany("ProductsVariantses")
                        .HasForeignKey("id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products_variant");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.ROLES_EMPLOYEE", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.EMPLOYEES", "Employees")
                        .WithMany()
                        .HasForeignKey("id_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.ROLES", "Roleses")
                        .WithMany()
                        .HasForeignKey("id_Roles")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Roleses");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.VARIANTS_VALUES", b =>
                {
                    b.HasOne("DAL_DataAccessLayers.IMAGES_PRODUCTS", "idImage")
                        .WithMany("ImageCollectiont")
                        .HasForeignKey("id_Image")
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.OPTIONS_VALUES", "IdoOptionsValues")
                        .WithMany("OptionValueses")
                        .HasForeignKey("id_Option", "id_Values")
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.PRODUCTS_OPTIONS", "IdProductsOptions")
                        .WithMany("Product_OPtion")
                        .HasForeignKey("id_Product", "id_Option")
                        .IsRequired();

                    b.HasOne("DAL_DataAccessLayers.PRODUCTS_VARIANTS", "IdProductsVariants")
                        .WithMany("ProductVariantses")
                        .HasForeignKey("id_Product", "id_Variant")
                        .IsRequired();

                    b.Navigation("idImage");

                    b.Navigation("IdoOptionsValues");

                    b.Navigation("IdProductsOptions");

                    b.Navigation("IdProductsVariants");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.CUSTOMERS", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.EMPLOYEES", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.IMAGES_PRODUCTS", b =>
                {
                    b.Navigation("ImageCollectiont");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.OPTIONS", b =>
                {
                    b.Navigation("OptionsesProducts");

                    b.Navigation("OptionsValueses");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.OPTIONS_VALUES", b =>
                {
                    b.Navigation("OptionValueses");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS", b =>
                {
                    b.Navigation("ProductsOptions");

                    b.Navigation("ProductsVariantses");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS_OPTIONS", b =>
                {
                    b.Navigation("Product_OPtion");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.PRODUCTS_VARIANTS", b =>
                {
                    b.Navigation("ProductVariantses");
                });

            modelBuilder.Entity("DAL_DataAccessLayers.VARIANTS_VALUES", b =>
                {
                    b.Navigation("variant_Values");
                });
#pragma warning restore 612, 618
        }
    }
}
